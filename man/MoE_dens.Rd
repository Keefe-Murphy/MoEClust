% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions.R
\name{MoE_dens}
\alias{MoE_dens}
\title{Density for Parameterised MVN Mixture of Experts Models}
\usage{
MoE_dens(modelName, data, mus, sigs, log.pis = 0, logarithm = TRUE)
}
\arguments{
\item{modelName}{A character string indicating the model. The help file for \code{\link[mclust]{mclustModelNames}} describes the available models.}

\item{data}{If there are no expert network covariates, \code{data} should be a numeric matrix or data frame, wherein rows correspond to observations (n) and columns correspond to variables (d). If there are expert network covariates, this should be a list of length G containing matrices/data.frames of (multivariate) WLS residuals for each component.}

\item{mus}{The mean for each of G components. If there is more than one component, this is a matrix whose k-th column is the mean of the k-th component of the mixture model. For the univariate models, this is a G-vector of means.}

\item{sigs}{A list of length G of variance parameters of the model. The components of this list depend on the specification of \code{modelName}.}

\item{log.pis}{If covariates enter the gating network, an n times G matrix of mixing proportions, otherwise a G-vector of mixing proportions for the components of the mixture. \strong{Must} be on the log-scale in both cases. The default of \code{0} effectively means densities (or log-densities) aren't scaled by the mixing proportions.}

\item{logarithm}{A logical value indicating whether or not the logarithm of the component densities should be returned. This defaults to \code{TRUE}, otherwise component densities are returned, obtained from the component log-densities by exponentiation. The \strong{log}-densities can be passed to \code{\link{MoE_estep}}.}
}
\value{
A numeric matrix whose \code{[i,k]}-th entry is the density or log-density of observation \emph{i} in component \emph{k}, scaled by the mixing proportions.
}
\description{
Computes densities (or log-densities) of observations in parameterised MVN mixtures of experts.
}
\note{
This function is intended for joint use with \code{\link{MoE_estep}}, using the \strong{log}-densities.
}
\examples{
data(ais)
hema  <- ais[,3:7]
model <- MoE_clust(hema, G=2, gating= ~ ais$BMI + ais$sex, model="EVE")
Dens  <- MoE_dens(modelName=model$modelName, data=hema,
                  mus=model$parameters$mean, sigs=model$parameters$variance$sigma,
                  log.pis=log(model$parameters$pro))

# Construct the z matrix and compute the log-likelihood
Estep <- MoE_estep(Dens=Dens)
(ll   <- Estep$loglik)

# The z matrix will be close but not exactly the same as that from the model
# as the EM algorithm finishes on an M-step, but the classification should be
identical(max.col(Estep$z), unname(model$classification)) #TRUE
round(sum(Estep$z - model$z), options()$digits) == 0      #TRUE
}
\seealso{
\code{\link{MoE_estep}}, \code{\link{MoE_clust}}, \code{\link[mclust]{mclustModelNames}}
}
\author{
Keefe Murphy - \href{keefe.murphy@ucd.ie}{<keefe.murphy@ucd.ie>}
}
